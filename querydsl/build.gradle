plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	// querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0' // 실제 애플리케이션 작성에 필요한 라이브러리
	implementation 'com.querydsl:querydsl-apt:5.0.0' // gradle 5.0 이상 추가, 코드 제너레이션 용도로 사용되는 라이브러리

//	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8' // 바인딩 파라미터를 쿼리에서 바로 확인할 수 있는 라이브러리

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 추가 시작
// build 관련 부분 (컴파일이 될 때 실행되며 Q 파일을 생성)
def querydslDir = "$buildDir/generated/querydsl" // build/generated/querydsl 경로 (Q 파일 생성 경로) -> CompileQuerydsl

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets { // IDE가 자동으로 소스 폴더를 잡아줌
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
// querydsl 추가 끝